# Contributor: Carlo Landmeter <clandmeter@gmail.com>
# Maintainer: Ed Robinson <ed@reevoo.com>
pkgname=ruby
pkgver=2.2.6
_abiver=2.2.0
pkgrel=0
pkgdesc="An object-oriented language for quick and easy programming"
url="http://www.ruby-lang.org/en/"
arch="all"
license="Ruby"
depends=""
depends_dev="gmp-dev"
makedepends="$depends_dev zlib-dev libressl-dev gdbm-dev db-dev readline-dev
	libffi-dev coreutils yaml-dev autoconf"
subpackages="$pkgname-doc $pkgname-dev $pkgname-irb::noarch
	$pkgname-rdoc::noarch $pkgname-rake::noarch $pkgname-bigdecimal::noarch
	$pkgname-io-console:io_console $pkgname-minitest::noarch
	$pkgname-json $pkgname-libs
	"
source="https://cache.ruby-lang.org/pub/$pkgname/${pkgver%.*}/$pkgname-$pkgver.tar.gz"
options="!fhs"
replaces="ruby-gems"
builddir="$srcdir/$pkgname-$pkgver"

_gemdir="/usr/lib/ruby/gems/$_abiver"
_rubydir="/usr/lib/ruby/$_abiver"
_chost="${CHOST/-alpine-/-}"

case "$CARCH" in
	x86) _arch="i386";;
	*) _arch="$CARCH";;
esac

prepare() {
	default_prepare || return 1

	cd "$builddir"
	autoconf
}

build() {
	cd "$builddir"

	# -fomit-frame-pointer makes ruby segfault, see gentoo bug #150413
	# In many places aliasing rules are broken; play it safe
	# as it's risky with newer compilers to leave it as it is.
	export CFLAGS="$CFLAGS -fno-omit-frame-pointer -fno-strict-aliasing"
	export CPPFLAGS="$CPPFLAGS -fno-omit-frame-pointer -fno-strict-aliasing"

	# ruby saves path to install. we want use $PATH
	export INSTALL=install

	# the configure script does not detect isnan/isinf as macros
	export ac_cv_func_isnan=yes
	export ac_cv_func_isinf=yes

	./configure \
		--build=$CBUILD \
		--host=$CHOST \
		--prefix=/usr \
		--sysconfdir=/etc \
		--mandir=/usr/share/man \
		--infodir=/usr/share/info \
		--with-sitedir='/usr/local/lib/site_ruby' \
		--with-search-path="/usr/lib/site_ruby/\$(ruby_ver)/$_arch-linux" \
		--enable-pthread \
		--disable-rpath \
		--enable-shared \
		--with-mantype=man \
		|| return 1
	make || return 1
	make test || return 1
}

package() {
	cd "$builddir"

	make DESTDIR="$pkgdir" install || return 1

	if [ -d "$pkgdir"/usr/local ]; then
		local f=$(cd "$pkgdir" ; find usr/local -type f)
		if [ -n "$f" ]; then
			error "Found files in /usr/local:"
			echo "$f"
			return 1
		fi
	fi
	install -m 644 -D COPYING "$pkgdir"/usr/share/licenses/$pkgname/COPYING
}

rake() {
	pkgdesc="Ruby based make-like utility"
	depends="$pkgname"

	_mvgem rake || return 1
	_mv usr/bin/rake
}

irb() {
	pkgdesc="The Interactive Ruby"
	replaces="$pkgname"
	depends="$pkgname"

	cd "$pkgdir"
	_mv usr/bin/irb \
		usr/lib/ruby/$_abiver/irb*
}

rdoc() {
	pkgdesc="Ruby documentation tool"
	depends="$pkgname $pkgname-json"

	_mvgem rdoc || return 1
	_mv usr/bin/ri \
		usr/bin/rdoc
}

bigdecimal() {
	pkgdesc="Ruby arbitrary-precision floating point decimal arithmetic"
	depends="$pkgname"

	_mvgem bigdecimal
}

io_console() {
	pkgdesc="Ruby simple console IO library"
	depends="$pkgname"
	_mvgem io-console

	_mv $_rubydir/io \
		$_rubydir/$_chost/io/console.so
}

minitest() {
	pkgdesc="Ruby suite of testing facilities"
	depends="$pkgname"

	_mvgem minitest
}

json() {
	pkgdesc="JSON implementation as a Ruby extension in C"
	depends="$pkgname"

	_mvgem json
}

libs() {
	pkgdesc="Libraries necessary to run Ruby"
	depends=""

	mkdir -p "$subpkgdir"/usr
	mv "$pkgdir"/usr/lib "$subpkgdir"/usr/
}

_mv() {
	local i; for i in "$@"; do
		mkdir -p "$subpkgdir"/${i%/*}
		mv "$pkgdir"/${i} "$subpkgdir"/${i%/*}/ || return 1
	done
}

_mvgem() {
	cd "$pkgdir"
	local path; for path in ./$_rubydir/${1}.rb \
			./$_rubydir/${1} \
			./$_rubydir/$_chost/${1} \
			./$_gemdir/gems/${1}-* \
			./$_gemdir/specifications/${1}-* \
			./$_gemdir/specifications/default/${1}-* ; do
		[ ! -e "$pkgdir/$path" ] || _mv "$path"
	done
}

md5sums="918ffe08c46f542199724659cfd54547  ruby-2.2.6.tar.gz"
sha256sums="de8e192791cb157d610c48a9a9ff6e7f19d67ce86052feae62b82e3682cc675f  ruby-2.2.6.tar.gz"
sha512sums="221ea2d18ff23e65539ee184e09ef78643e46266a0ca18ccd2cb251970a6c057b843363f7c97541b2a6e68e1c3c41a36e2ae5c8218da888e0429473504abf66d  ruby-2.2.6.tar.gz"
